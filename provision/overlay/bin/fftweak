#!/usr/bin/env python3

import argparse
import os
import sys
import yaml
import json

descr = """

A tool for interacting with Firefox's about:config in a sensible way from the
commandline. Note that this script has relatively little bullet proofing, use
it at your own risk. WARNING: never got this script to work, it actually
just corrups whatever FireFox profile you use it on.

"""
parser = argparse.ArgumentParser(description=descr)

parser.add_argument("--profile", "-p", default=None,
                    help="Set Firefox profile name. (default: infer name)")

parser.add_argument("--ff_dir", "-f",
                    default=os.path.join(
                        os.environ.get("HOME"), ".mozilla/firefox"),
                    help="Set Firefox configuration directory. (default: " +
                    "~/.mozilla/firefox")

parser.add_argument("--dump", "-d", action="store_true", default=False,
                    help="Dump about:config contents to standard out" +
                    " as TSV.")

parser.add_argument("--pref", "-r", default=None,
                    help="Specify preference name to set.")

parser.add_argument("--val", "-a", default=None,
                    help="Specify new preference value.")

args = parser.parse_args()

def parse_prefs(fpath):
    prefs = {}
    with open(fpath, 'r') as f:
        for line in f:
            line = line.strip()
            if not line.startswith("user_pref"):
                # discard lines which do not contain settings data
                continue

            # the name is always inside of quotes at the beginning of the
            # function call
            pref_name = line.split('"')[1].strip()

            # get everything after the first comma, and before the first
            # close parenthesis.
            pref_val = ','.join(line.split(',')[1:]).split(')')[0].strip()
            if pref_val.startswith('"'):
                # strip quotes from strings
                pref_val = pref_val[1:-1]
            prefs[pref_name] = pref_val

    return prefs

mozilla_pref_header = """# Mozilla User Preferences

/* Do not edit this file.
 *
 * If you make changes to this file while the application is running,
 * the changes will be overwritten when the application exits.
 *
 * To make a manual change to preferences, you can visit the URL about:config
 */
 """

if args .pref is not None:
    if args.val is None:
        sys.stderr.write("ERROR: if you specify --pref, you must also" +
                         " specify --var\n")
        exit(1)

if args.val is not None:
    if args.pref is None:
        sys.stderr.write("ERROR: if you specify --val, you must also" +
                         " specify --pref\n")
        exit(1)

if args.profile is None:
    for elem in os.listdir(args.ff_dir):
        if elem.endswith('.default'):
            args.profile = elem
            sys.stderr.write("INFO: inferred profile: {}\n"
                             .format(args.profile))
            break

prefs_file = os.path.join(args.ff_dir, args.profile, "prefs.js")
prefs_data = parse_prefs(prefs_file)
if args.dump:
    print(yaml.dump(prefs_data, default_flow_style=False))
elif args.pref:
    prefs_data[args.pref] = args.val
    with open(prefs_file, 'w') as f:
        f.write(mozilla_pref_header)
        for key in prefs_data:
            val = prefs_data[key]
            line = 'user_pref("{}", {});\n'.format(key, val)
            f.write(line)
