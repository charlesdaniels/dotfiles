#!/usr/bin/env python3

# Copyright 2018 Charles Daniels

#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:

#  1. Redistributions of source code must retain the above copyright notice,
#  this list of conditions and the following disclaimer.

#  2. Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.

#  3. Neither the name of the copyright holder nor the names of its
#  contributors may be used to endorse or promote products derived from this
#  software without specific prior written permission.

#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

descr = """Script to download the contents of a webpage, then print the results
of a specified xPath query and exit."""

import argparse
import urllib.request
import lxml.etree
import pprint
import sys

parser = argparse.ArgumentParser(description=descr)

parser.add_argument("--url", "-u", help="Specify target URL.", required=True)

parser.add_argument("--query", "-q", help="Specify xPath query.",
                    required=True)

parser.add_argument("--extract_content", "-e", default=False,
                    action="store_true", help="Display content only as " + 
                    "output, rather than HTML markup")

parser.add_argument("--output_separator", "-s", default="\n",
                    help="Change string used to delimit matches to query in " +
                    "the output. (default: single newline)")

args = parser.parse_args()

f = urllib.request.urlopen(args.url)
tree = lxml.etree.HTML(f.read())

results = tree.xpath(args.query)

for r in results:
    if args.extract_content:
        sys.stdout.write(r.text)
    else:
        sys.stdout.write(str(lxml.etree.tostring(r, pretty_print=True)))

    sys.stdout.write(args.output_separator)

sys.stdout.flush()
