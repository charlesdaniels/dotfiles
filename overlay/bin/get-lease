#!/usr/bin/env python3

# .SCRITPDOC

descr = """
# Lists all active leases on the current system.
""".replace("# ", "")

# .LICENSE
#
# Copyright 2018 Charles Daniels

#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:

#  1. Redistributions of source code must retain the above copyright notice,
#  this list of conditions and the following disclaimer.

#  2. Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.

#  3. Neither the name of the copyright holder nor the names of its
#  contributors may be used to endorse or promote products derived from this
#  software without specific prior written permission.

#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

# .ENDOC

import os
import sys
import argparse
import pathlib

def parse_file(fpath):
    fpath = str(fpath)
    with open(fpath, "r") as f:
        interface = None
        addr = None
        server = None
        for line in f:
            line = line.strip().replace(";", "").split()
            try:
                if "}" in line:
                    sys.stdout.write("{}\t{}\t{}\t{}\n".format(
                            interface,
                            addr,
                            server,
                            fpath))
                    sys.stdout.flush()

                if line[0] == "interface":
                    interface = line[1].replace('"', "")

                if line[0] == "fixed-address":
                    addr = line[1]

                if line[1] == "dhcp-server-identifier":
                    server = line[2];

            except IndexError:
                continue

def main():
    parser = argparse.ArgumentParser(description=descr)

    parser.add_argument("--leasedir", "-d", default="/var/lib/dhcp",
                 help="Directory where dhclient .leases files are stored" +
                 " (default: /var/lib/dhcp/)")


    args = parser.parse_args()

    lease_dir = pathlib.Path(args.leasedir)

    sys.stderr.write("iface\taddr\t\tsrv\t\tfile\n")
    sys.stderr.flush()
    for leasefile in lease_dir.glob("*.leases"):
        parse_file(leasefile)

if __name__ == "__main__":
    main()
