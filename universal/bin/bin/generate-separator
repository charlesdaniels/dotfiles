#!/bin/sh
########10########20########30## DOCUMENTATION #50########60########70########80
#
#  OVERVIEW
#  ========
#  This script creates nicely formatted separators, optionally with headings
#  burned into them. 
#  
#  STYLES
#  ======
#    hash . . . languages where `#` indicates a comment 
#    
#    python . . alias for hash
#    
#    sh . . . . alias for hash
#    
#    shell  . . alias for hash
#    
#    c  . . . . c and c-like languages
#    
#    java . . . aliased to c
#    
#    c++  . . . aliased to c
#    
#    cpp  . . . aliased to c
#    
#    star . . . aliased to c
#    
#    percent  . languages where `%` indicates a comment
#    
#    latex  . . aliased to percent 
#    
#    tex  . . . aliased to percent
#    
#    ps . . . . aliased to percent
#    
#    
#  
#  USAGE
#  =====
#   $1 . . . (optional) the length of the separator, defaults to 80
#   
#   $2 . . . (optional) the heading to burn in 
#   
#   $3 . . . (optional) the position in which to place the header . If not
#            specified, the heading will be centered in the separator. If you
#            wish to specify centering explicitly, you may use `center` for
#            this argument.
#            
#   $4 . . . (optional) the style to use. Default value is `hash`
#            
########10########20########30# CONFIGURATION  #50########60########70########80

########10########20########30#### LICENSE #####50########60########70########80
# Copyright (c) 2016, Charles Daniels
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, 
# this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice, 
# this list of conditions and the following disclaimer in the documentation 
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its 
# contributors may be used to endorse or promote products derived from this 
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
########10########20########30########40########50########60########70########80


# WORKSPACE_DIR="$TEMP_DIR" invoke-sensible-python3
#exit 0


PY_BEGIN=120
APPTAG="generate-separator-$(iso8601date)"
temputils $APPTAG create > /dev/null
TEMP_DIR="$(temputils $APPTAG get)" > /dev/null
SCRIPT="$TEMP_DIR/script"
printf '#!' > "$SCRIPT"
echo "$(which $(sensible-python3))" >> "$SCRIPT"
tail -n +$PY_BEGIN < $0 >> "$SCRIPT"
chmod +x $SCRIPT

$SCRIPT "$@"

temputils $APPTAG destroy > /dev/null

exit 0





















########10########20########30##### IMPORTS ####50########60########70########80

import subprocess
import os
import sys
import re

########10########20########30########40########50########60########70########80

length = 80
heading = ""
header_position = "center"
style = "hash"

# keys are styles, values are list of aliases
styles = {"hash":["python", "sh", "shell"],
          "c":["c++", "java", "cpp", "star"],
          "percent":["latex", "tex", "ps"]}

argv = sys.argv
argc = len(sys.argv)
# get length and typecast it
if argc > 1:
  try:
    length = int(argv[1])
  except Exception:
    print("ERROR 146: invalid length: '{}'".format(argv[1]))
    exit(1)

# get heading
if argc > 2:
  heading = argv[2]

# get position
if argc > 3:
  if argv[3] != 'center':
    try:
      header_position = int(argv[3])
    except Exception:
      print("ERROR 160: invalid header position: '{}'".format(argv[3]))
      exit(1)

# get style
if argc > 4:
  if argv[4] in styles:
    style = argv[4]
  else:
    found = False
    for key in styles:
      if argv[4] in styles[key]:
        found = True
        style = key
    if not found:
      print("ERROR 172: no such style: '{}'".format(argv[4]))
      exit(1)

print(length, heading, header_position, style)


