#!/bin/sh
########10########20########30## DOCUMENTATION #50########60########70########80
#
#  OVERVIEW
#  ========
#  Utility for CSCE240. Given a tarfile containing an assignment submission,
#  test it to see if it works, and also create a logfile to prove this.
# 
#  DEPENDANCIES
#  ============
#  * iso8601date
#  * temputils
#  * extract
#  * invoke-sensible-md5 
#  * sensible-md5 (dependency of the above)
#  * format-code
# 
########10########20########30#### LISCENSE ####50########60########70########80
#  Copyright (c) 2016, Charles Daniels
#  All rights reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
# 
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#  
########10########20########30########40########50########60########70########80

TIMESTAMP=$(iso8601date)
APPTAG="$TIMESTAMP.240utils-testassignment"
temputils $APPTAG create
TEMP_DIR=$(temputils $APPTAG get)
DATA_FILE=$TEMP_DIR/encoded_data.txt
WORKING_DIR="$(pwd)"

printf "INFO: retrieving encoded data from user... "
echo "please replace this with the uuencoded contents of your testpack file" \
  > $DATA_FILE
$EDITOR $DATA_FILE
echo "DONE"

printf "INFO: unpacking assignment data... "
cd $TEMP_DIR
uudecode $DATA_FILE > $TEMP_DIR/uudecode.log 2>&1
if [ $? -ne 0 ] ; then
  echo "FAIL"
  echo "ERROR 59: uudecode failed!"
  echo "INFO: contents of $TEMP_DIR/uudecode.log"
  cat $TEMP_DIR/uudecode.log
  temputils $APPTAG destroy
  cd "$WORKING_DIR"
  exit 1
fi
echo "DONE"

printf "INFO: extracting tarball... "
TARBALL_NAME=$(find . -name "*.xz")
extract "$TARBALL_NAME" > $TEMP_DIR/extract.log 2>&1
if [ $? -ne 0 ] ; then 
  echo "FAIL"
  echo "ERROR 72: failed to extract tarball"
  echo "INFO: contents of $TEMP_DIR/extract.log"
  cat $TEMP_DIR/extract.log
  temputils $APPTAG destroy
  cd "$WORKING_DIR"
  exit 1
fi
TARGETDIR=$(find . -name "hw*testdirectory")
if [ ! -e "$TARGETDIR" ] ; then
  echo "FAIL"
  echo "ERROR 83: target directory $TEMP_DIR/$TARGETDIR does not exist!"
  echo "INFO: contents of $TEMP_DIR/extract.log"
  cat $TEMP_DIR/extract.log
  temputils $APPTAG destroy
  cd "$WORKING_DIR"
  exit 1
fi
echo "DONE"

printf "INFO: gathering system information... "
cd $TARGETDIR
LOG_FILE=../execute.log
touch $LOG_FILE
echo "uname: $(uname -a)" >> $LOG_FILE
echo "hostname: $(hostname)" >> $LOG_FILE
echo "system time: $(iso8601date)" >> $LOG_FILE
echo "current user: $(whoami)" >> $LOG_FILE
echo "MD5 sums for local directory:" >> $LOG_FILE
find . -type f -exec invoke-sensible-md5 {} \; >> $LOG_FILE 2>&1
echo "SHA256 sums for local directory:" >> $LOG_FILE
find . -type f -exec shasum {} \; >> $LOG_FILE 2>&1
echo "DONE"

printf "INFO: running zip up script... "
echo "executing zaZipUpScript" >> $LOG_FILE
./zaZipUpScript.txt >> $LOG_FILE 2>&1
if [ $? -ne 0 ] ; then 
  echo "FAIL"
  echo "ERROR 110: zaZipUpScript.txt failed!"
  printf "INFO: copying test results to $HOME/test_results_$TIMESTAMP.txt ... "
  cp $LOG_FILE $HOME/test_results_$TIMESTAMP.txt
  echo "DONE"
  cd "$WORKING_DIR"
  temputils $APPTAG destroy
fi
echo "DONE"

printf "INFO: running file copy script... "
echo "executing zbFileCopyScript" >> $LOG_FILE
./zbFileCopyScript.txt >> $LOG_FILE 2>&1
if [ $? -ne 0 ] ; then 
  echo "FAIL"
  echo "ERROR 126: zbFileCopyScript.txt failed!"
  printf "INFO: copying test results to $HOME/test_results_$TIMESTAMP.txt ... "
  cp $LOG_FILE $HOME/test_results_$TIMESTAMP.txt
  echo "DONE"
  cd "$WORKING_DIR"
  temputils $APPTAG destroy
fi
echo "DONE"

printf "INFO: running compile script... "
echo "executing zcCompileScript" >> $LOG_FILE
./zcCompileScript.txt >> $LOG_FILE 2>&1
if [ $? -ne 0 ] ; then 
  echo "FAIL"
  echo "ERROR 140: zcCompileScript.txt failed!"
  printf "INFO: copying test results to $HOME/test_results_$TIMESTAMP.txt ... "
  cp $LOG_FILE $HOME/test_results_$TIMESTAMP.txt
  echo "DONE"
  cd "$WORKING_DIR"
  temputils $APPTAG destroy
fi
echo "DONE"

printf "INFO: running execute script... "
echo "executing zdExecuteScript" >> $LOG_FILE
./zdExecuteScript.txt >> $LOG_FILE 2>&1
if [ $? -ne 0 ] ; then 
  echo "FAIL"
  echo "ERROR 154: zdExecuteScript.txt failed!"
  printf "INFO: copying test results to $HOME/test_results_$TIMESTAMP.txt ... "
  cp $LOG_FILE $HOME/test_results_$TIMESTAMP.txt
  echo "DONE"
  cd "$WORKING_DIR"
  temputils $APPTAG destroy
fi
echo "DONE"

printf "INFO: gathering artifacts... "
echo "displaying contents of all I/O files... " >> $LOG_FILE
format-code "*.txt" >> $LOG_FILE 2>&1
echo "DONE"

printf "INFO: copying test results to $HOME/test_results_$TIMESTAMP.txt ... "
cp $LOG_FILE $HOME/test_results_$TIMESTAMP.txt
echo "DONE"

cd "$WORKING_DIR"
temputils $APPTAG destroy