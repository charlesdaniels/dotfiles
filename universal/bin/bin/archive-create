#!/bin/sh
########10########20########30## DOCUMENTATION #50########60########70########80
#
#  OVERVIEW
#  ========
#  This script produces an archive, as well as a manifest file and checksums
#  for both the archive and it's contents. It uses xz compression to generate
#  the archive.
#  
#  USAGE
#  =====
#   $1 . . . . the directory to archive
#
########10########20########30#### LISCENSE ####50########60########70########80
#  Copyright (c) 2016, Charles Daniels
#  All rights reserved.
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
# 
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#  
########10########20########30########40########50########60########70########80


ARCHIVE_DIR=$(basename "$1")
TIMESTAMP="$(iso8601date)"
TEMP_DIR=/tmp/archive-$TIMESTAMP

echo "INFO: archive timestamp is: $TIMESTAMP"
echo "INFO: workspace is: $TEMP_DIR"
echo "INFO: building archive from directory: $ARCHIVE_DIR"
if [ ! -d "$ARCHIVE_DIR" ] ; then
  echo "ERROR: $ARCHIVE_DIR does not exist or is not a directory"
  exit 1
fi

if [ -e "$ARCHIVE_DIR.tar.xz" ] ; then
  echo "ERROR: $ARCHIVE_DIR.tar.xz already exists"
  exit 1
fi

FILE_COUNT=$(find "$ARCHIVE_DIR" -type f | wc -l)
echo "INFO: building archive from $FILE_COUNT files"

printf "STATUS: creating workspace... "
mkdir -p $TEMP_DIR
echo "done"

printf "STATUS: generating md5 sums... "
find "$ARCHIVE_DIR" -type f | parallel md5 {} 2> $TEMP_DIR/md5.log > $TEMP_DIR/md5sums.txt
if [ $? -ne 0 ] ; then
  echo "FAIL"
  echo "ERROR 75: failed to generate md5 sums"
  echo "INFO: will now display $TEMP_DIR/md5.log"
  cat $TEMP_DIR/md5.log
  exit 1
fi
echo "done"
echo "INFO: computed $(wc -l < $TEMP_DIR/md5sums.txt) checksums"

printf "STATUS: generating SHA sums... "
find "$ARCHIVE_DIR" -type f | parallel shasum {} 2> $TEMP_DIR/shasum.log > $TEMP_DIR/shasums.txt
if [ $? -ne 0 ] ; then
  echo "FAIL"
  echo "ERROR 87: failed to generate sha sums"
  echo "INFO: will now display $TEMP_DIR/shasum.log"
  cat $TEMP_DIR/shasum.log
  exit 1
fi
echo "done"
echo "INFO: computed $(wc -l < $TEMP_DIR/shasums.txt) checksums"

printf "STATUS: gathering system information... "
sysenv > $TEMP_DIR/sysenv.txt
echo "done"

printf "STATUS: preparing archive... "
if [ -d "$ARCHIVE_DIR/archive_info" ] ; then 
  echo ""
  printf "WARNING: $ARCHIVE_DIR/archive_info already exists, backing it up to ./ ..."
  if [ -e ./archive_info.bak ] ; then 
    echo ""
    printf "WARNING: ./archive_info.bak already exists, deleting it..."
    rm -rf ./archive_info
    echo "done"
  fi 
  mv "$ARCHIVE_DIR/archive_info" ./archive_info.bak
  echo "done"
fi

mkdir "$ARCHIVE_DIR/archive_info"
cp $TEMP_DIR/*txt "$ARCHIVE_DIR/archive_info"
echo "done"

printf "STATUS: compressing archive ... "
tar cvfJ "$ARCHIVE_DIR.tar.xz" "$ARCHIVE_DIR" > "$ARCHIVE_DIR.manifest" 2>&1
echo "done"

printf "STATUS: removing workspace... "
rm -rf "$TEMP_DIR"
echo "done"

printf "STATUS: removing archive info from original... "
rm -rf "$ARCHIVE_DIR/archive_info"
echo "done"

printf "INFO: completed archive generation."
echo ""