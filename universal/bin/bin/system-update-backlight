#!/bin/sh

# updates macbook screen brightness based on light sensor value

BACKLIGHT_STEP=1
FADE_TIME="250"
LIGHT_SENSOR=/sys/devices/platform/applesmc.768/light
INTERVAL=2

if [ ! -e "$LIGHT_SENSOR" ] ; then
	echo "ERROR 8: light sensor not present"
	exit 1
fi

SENSOR_VALUE=$(cut "$LIGHT_SENSOR"  -d, -f1 | tr -d '(')
echo "INFO: read value $SENSOR_VALUE from sensor"
CURRENT_BACKLIGHT=$(xbacklight)
CURRENT_BACKLIGHT=$(printf "%.0f\n" "$CURRENT_BACKLIGHT")
echo "INFO: current backlight value is: $CURRENT_BACKLIGHT"

# $1 . . . minimum sensor value
# $2 . . . maximum sensor value
# $3 . . . minimum backlight level
# $4 . . . maximum backlight level
set_backlight () {
  if [ $SENSOR_VALUE -ge $1 ] ; then
    if [ $SENSOR_VALUE -le $2 ] ; then
      echo "INFO: targeting backlight in $3 to $4"
      if [ $CURRENT_BACKLIGHT -ge $4 ] ; then
        echo "INFO: decreasing backlight"
        xbacklight -$BACKLIGHT_STEP -time $FADE_TIME
        return 0
      elif [ $CURRENT_BACKLIGHT -le $3 ] ; then
        echo "INFO: increasing backlight"
        xbacklight +$BACKLIGHT_STEP -time $FADE_TIME
        return 0
      else
        echo "INFO: backlight value $CURRENT_BACKLIGHT already within target range"
        return 0
      fi
    fi
  fi
}

while true ; do
  acpi -a | grep on-line > /dev/null
  if [ $? -eq 0 ] ; then
    echo "INFO: system on AC power, not doing anything"
    sleep $INTERVAL
    continue
  fi
  SENSOR_VALUE=$(cut "$LIGHT_SENSOR"  -d, -f1 | tr -d '(')
  echo "INFO: read value $SENSOR_VALUE from sensor"
  CURRENT_BACKLIGHT=$(xbacklight)
  CURRENT_BACKLIGHT=$(printf "%.0f\n" "$CURRENT_BACKLIGHT")
  echo "INFO: current backlight value is: $CURRENT_BACKLIGHT"
  set_backlight -1 10 10 20
  set_backlight 11 20 30 40
  set_backlight 21 30 40 50
  set_backlight 31 40 50 60
  set_backlight 41 100 60 70
  set_backlight 101 200 70 80
  set_backlight 201 500 80 100
  echo ""
  sleep $INTERVAL
done