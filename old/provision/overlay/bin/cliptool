#!/bin/sh

# .SCRIPTDOC

# Wrapper for interacting with various clipboard systems from the CLI.  On
# macOS, this wraps pbcopy/pbpaste, and on Linux it wraps xclip. If neither is
# available, it will fail over to using a temporary file in ``/tmp``, which may
# be useful when used within other scripts.

# Note that on Linux, this explicitly does not use the "X Clipboard" (the one
# that uses middle mouse), but rather the one that uses ``<C-c>`` and
# ``<C-v>``. This should hold true for other systems that use Xorg/X11.

# .SYNTAX
#
#  $1 . . . . if `copy` - copy standard input to the system clipboard
#             if `get`  - output the system clipboard contents to stdout
#
# The following environment variables are checked to configure behaviour:
#
# CLIPTOOL_CLIPBOARD_MANAGER . . . if set, the specified clipboard manager
#                                  will be used instead of following the
#                                  above hierarchy. Note that the specified
#                                  clipboard manager must be one of the
#                                  supported ones, or the program will crash.

# .AUTHOR

# Charles Daniels


# .LICENSE

# Copyright 2018 Charles Daniels

#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:

#  1. Redistributions of source code must retain the above copyright notice,
#  this list of conditions and the following disclaimer.

#  2. Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.

#  3. Neither the name of the copyright holder nor the names of its
#  contributors may be used to endorse or promote products derived from this
#  software without specific prior written permission.

#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.


# .ENDOC

ACTION="$1"

# select clipboard manager
CLIPBOARD_MANAGER="ERROR"

command -v "xclip" > /dev/null
if [ $? -eq 0 ] ; then
	CLIPBOARD_MANAGER="xclip"
fi

command -v "pbcopy" > /dev/null
if [ $? -eq 0 ] ; then
	CLIPBOARD_MANAGER="pbcopy"
fi

if (: "${CLIPTOOL_CLIPBOARD_MANAGER?}") 2>/dev/null; then
	CLIPBOARD_MANAGER="$CLIPTOOL_CLIPBOARD_MANAGER"
	command -v "$CLIPBOARD_MANAGER" > /dev/null
	if [ $? -ne 0 ] ; then
		echo "ERROR 104: selected clipboard manager $CLIPBOARD_MANAGER not found"
		exit 1
	fi
fi

if [ "$CLIPBOARD_MANAGER" = "ERROR" ] ; then
	echo "WARNING 59: failed to detect any installed clipboard manager"
	echo "INFO: failing over to temp file"
	CLIPBOARD_MANAGER="failover"
	touch /tmp/cliptool_clipboard.txt
fi


if [ "$#" -lt 1 ] ; then
	echo "ERROR 43: at least one argument is required"
	echo "USAGE: cliptool [command]"
	exit 1
fi


case $ACTION in
	copy)
		case $CLIPBOARD_MANAGER in
			pbcopy)
				pbcopy < /dev/stdin
				;;
			xclip)
				xclip  -selection clipboard < /dev/stdin
				;;
			failover)
				cat /dev/stdin > /tmp/cliptool_clipboard.txt
				;;
		esac
		;;
	get)
		case $CLIPBOARD_MANAGER in
			pbcopy)
				pbpaste
				;;
			xclip)
				xclip -selection clipboard -o
				;;
			failover)
				cat /tmp/cliptool_clipboard.txt
				;;
		esac
		;;
	*)
		echo "ERROR 112: no such action $ACTION"
		exit 1
		;;
esac

